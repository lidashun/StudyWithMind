vim查找命令（区分大小写）
1.命令模式下输入： /[查找字符串]  可以在当前文件中查找该字符串，
按n键，查找下一个；按N键，查找上一个
2.在(,[,{前输入 % ，可以查找配对的括号；
3.输入 :set hls is   可以将查找字符串高亮
输入 :nohlsearch  可以关闭高亮

Vim p命令
将最后一次删除内容粘贴到光标后。
ddp  先dd再p，交换两行位置
xp   先x再p，交换两个字符的位置

3.定位到具体的文件位置
ctrl+g  显示当前文件的基本信息（文件名，行数）
G 到文件最后一行
gg 到首行
输入数字，再按G 到输入的数字行    或者输入 : 再输入行数  按回车，直接到指定行
0  到光标所在行的首部
$  到光标所在行的尾部

4.替换命令 :<range> s/<search_string>/<replace_string>/<modifier>
输入 :/s/old/new 将光标所在行的第一个old替换成new
输入 :/s/old/new/g 将光标所在行的所有old替换成new
某一段落替换   :#,#s/old/new/g   两个#表示首尾行数
整个文件替换   :%s/old/new/g

选中文本
输入  v  使vim进入可视状态，之后移动光标进行选择文本

插入命令
a 在光标后面插入
i 在光标前面插入
A 在行尾插入
o 在当前行后插入（在下方新增一行）
O 在当前行前插入（在上方新增一行）


组合命令
查找，删除，插入

J  上下两行合并

Linux命令
cat命令 cat [option]...[FILE]...
eg:cat log20210415.txt  输出日志的所有内容

head，tail命令  输出文件首尾指定行数的内容
eg：head -5 log20210415.txt   输出日志前5行内容
eg：tail -5 log20210415.txt   输出日志末尾5行内容

grep命令  输出匹配指定字符串的行
eg:grep -i "begin" -m 5 log20210415.txt    -i(忽略大小写) -m(最多输出5行)
统计匹配字符串的行数
eg:grep -i "begin" -c log20210415.txt
1.vim的起源，作者是谁
2.为什么要学习vim，能给工作带来什么帮助
3.vim的打开和退出方式
4.vim的3中模式
插入模式，
命令模式，
末行模式，
5.vim中的编辑命令
插入,删除
6.vim中的查找搜索命令
简单查找 输入  /字符串  或者?字符串
通配符查找，输入   /\<字符串\>    比如/\<order*\>  查找所有以order开头的字符串

先查找才能替换

7.vim定位命令
首行、末行、指定行
7.在日常工作中，哪些操作是可以被vim改善的？
a.查找括号匹配的另一个括号：比如方法代码量大，利用鼠标移动较慢，则光标定位在括号上，输入 % 可以定位到匹配的括号
b.到指定的行数，原先需要鼠标点击右下角的line，再输入行数，按回车。vim可以直接在命令模式下输入  :行数 再回车到指定行
c.交换上下两行 ddp
